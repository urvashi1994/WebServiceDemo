//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebServiceConsumer.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.CalculatorServiceSoap")]
    public interface CalculatorServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Addition", ReplyAction="*")]
        int Addition(int No1, int No2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Addition", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AdditionAsync(int No1, int No2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Subtraction", ReplyAction="*")]
        int Subtraction(int No1, int No2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Subtraction", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SubtractionAsync(int No1, int No2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Multiplication", ReplyAction="*")]
        int Multiplication(int No1, int No2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Multiplication", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MultiplicationAsync(int No1, int No2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Division", ReplyAction="*")]
        int Division(int No1, int No2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Division", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DivisionAsync(int No1, int No2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CalculatorServiceSoapChannel : WebServiceConsumer.ServiceReference2.CalculatorServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorServiceSoapClient : System.ServiceModel.ClientBase<WebServiceConsumer.ServiceReference2.CalculatorServiceSoap>, WebServiceConsumer.ServiceReference2.CalculatorServiceSoap {
        
        public CalculatorServiceSoapClient() {
        }
        
        public CalculatorServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Addition(int No1, int No2) {
            return base.Channel.Addition(No1, No2);
        }
        
        public System.Threading.Tasks.Task<int> AdditionAsync(int No1, int No2) {
            return base.Channel.AdditionAsync(No1, No2);
        }
        
        public int Subtraction(int No1, int No2) {
            return base.Channel.Subtraction(No1, No2);
        }
        
        public System.Threading.Tasks.Task<int> SubtractionAsync(int No1, int No2) {
            return base.Channel.SubtractionAsync(No1, No2);
        }
        
        public int Multiplication(int No1, int No2) {
            return base.Channel.Multiplication(No1, No2);
        }
        
        public System.Threading.Tasks.Task<int> MultiplicationAsync(int No1, int No2) {
            return base.Channel.MultiplicationAsync(No1, No2);
        }
        
        public int Division(int No1, int No2) {
            return base.Channel.Division(No1, No2);
        }
        
        public System.Threading.Tasks.Task<int> DivisionAsync(int No1, int No2) {
            return base.Channel.DivisionAsync(No1, No2);
        }
    }
}
